#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL_old.LORA_SOFD_QUEUE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LORA_SOFD")]
	public partial class lora_queueDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertad_org_action(ad_org_action instance);
    partial void Updatead_org_action(ad_org_action instance);
    partial void Deletead_org_action(ad_org_action instance);
    partial void Insertad_user_org_change(ad_user_org_change instance);
    partial void Updatead_user_org_change(ad_user_org_change instance);
    partial void Deletead_user_org_change(ad_user_org_change instance);
    #endregion
		
		public lora_queueDataContext() : 
				base(global::DAL_old.Properties.Settings.Default.LORA_SOFDConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public lora_queueDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lora_queueDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lora_queueDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lora_queueDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ad_org_action> ad_org_actions
		{
			get
			{
				return this.GetTable<ad_org_action>();
			}
		}
		
		public System.Data.Linq.Table<ad_user_org_change> ad_user_org_changes
		{
			get
			{
				return this.GetTable<ad_user_org_change>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="queue.ad_org_actions")]
	public partial class ad_org_action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _system_id;
		
		private int _los_id;
		
		private string _uuid;
		
		private string _action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsystem_idChanging(long value);
    partial void Onsystem_idChanged();
    partial void Onlos_idChanging(int value);
    partial void Onlos_idChanged();
    partial void OnuuidChanging(string value);
    partial void OnuuidChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    #endregion
		
		public ad_org_action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_system_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long system_id
		{
			get
			{
				return this._system_id;
			}
			set
			{
				if ((this._system_id != value))
				{
					this.Onsystem_idChanging(value);
					this.SendPropertyChanging();
					this._system_id = value;
					this.SendPropertyChanged("system_id");
					this.Onsystem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_los_id", DbType="Int NOT NULL")]
		public int los_id
		{
			get
			{
				return this._los_id;
			}
			set
			{
				if ((this._los_id != value))
				{
					this.Onlos_idChanging(value);
					this.SendPropertyChanging();
					this._los_id = value;
					this.SendPropertyChanged("los_id");
					this.Onlos_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uuid", DbType="NVarChar(250)")]
		public string uuid
		{
			get
			{
				return this._uuid;
			}
			set
			{
				if ((this._uuid != value))
				{
					this.OnuuidChanging(value);
					this.SendPropertyChanging();
					this._uuid = value;
					this.SendPropertyChanged("uuid");
					this.OnuuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="queue.ad_user_org_change")]
	public partial class ad_user_org_change : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_id;
		
		private string _Uuid;
		
		private int _Orgunit_los_id;
		
		private string _action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_idChanging(int value);
    partial void OnSystem_idChanged();
    partial void OnUuidChanging(string value);
    partial void OnUuidChanged();
    partial void OnOrgunit_los_idChanging(int value);
    partial void OnOrgunit_los_idChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    #endregion
		
		public ad_user_org_change()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int System_id
		{
			get
			{
				return this._System_id;
			}
			set
			{
				if ((this._System_id != value))
				{
					this.OnSystem_idChanging(value);
					this.SendPropertyChanging();
					this._System_id = value;
					this.SendPropertyChanged("System_id");
					this.OnSystem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uuid", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Uuid
		{
			get
			{
				return this._Uuid;
			}
			set
			{
				if ((this._Uuid != value))
				{
					this.OnUuidChanging(value);
					this.SendPropertyChanging();
					this._Uuid = value;
					this.SendPropertyChanged("Uuid");
					this.OnUuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orgunit_los_id", DbType="Int NOT NULL")]
		public int Orgunit_los_id
		{
			get
			{
				return this._Orgunit_los_id;
			}
			set
			{
				if ((this._Orgunit_los_id != value))
				{
					this.OnOrgunit_los_idChanging(value);
					this.SendPropertyChanging();
					this._Orgunit_los_id = value;
					this.SendPropertyChanged("Orgunit_los_id");
					this.OnOrgunit_los_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
